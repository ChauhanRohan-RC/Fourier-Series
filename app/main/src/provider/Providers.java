package provider;

import app.R;
import function.definition.ComplexDomainFunctionI;
import function.definition.MergedFunction;
import function.graphic.CharMerger;
import function.internal.basic.*;
import function.internal.chars.CharC;
import function.internal.chars.CharR;
import misc.CollectionUtil;
import misc.Log;
import misc.MathUtil;
import org.apache.batik.parser.ParseException;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Unmodifiable;
import test.ParticleWave;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class Providers {

    public static final String TAG = "Providers";

    /* ......................... No-op provider ........................... */

    public static class NoOpProviderException extends Exception {

        public NoOpProviderException() {
            super();
        }

        public NoOpProviderException(String message) {
            super(message);
        }

        public NoOpProviderException(String message, Throwable cause) {
            super(message, cause);
        }

        public NoOpProviderException(Throwable cause) {
            super(cause);
        }

        public NoOpProviderException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
            super(message, cause, enableSuppression, writableStackTrace);
        }
    }




    public static class NoopProvider implements FunctionProviderI {

        private static NoopProvider sInstance;

        @NotNull
        public static NoopProvider getSingleton() {
            if (sInstance == null) {
                sInstance = new NoopProvider();
            }

            return sInstance;
        }


        private NoopProvider() {
        }

        @NotNull
        @Override
        public FunctionMeta getFunctionMeta() {
            return FunctionMeta.NOOP;
        }

        @Override
        public @NotNull ComplexDomainFunctionI requireFunction() throws ParseException, NoOpProviderException {
            throw new NoOpProviderException("Select a function!");
        }

        @Override
        public String toString() {
            return getFunctionMeta().displayName();
        }
    }


    @NotNull
    public static ComplexDomainFunctionI createRandomSignal() {
        final Random r = R.RANDOM;
        final int len = r.nextInt(1, 5);
        final ComplexDomainFunctionI[] functions = new ComplexDomainFunctionI[len];
        for (int i=0; i < len; i++) {
            functions[i] = new SineSignal(r.nextFloat(1, 10), r.nextInt(4, 30), r.nextDouble(0, MathUtil.TWO_PI), r.nextFloat(0, 1), r.nextFloat(0.5f, 5f));
        }

        final ComplexDomainFunctionI result = new MergedFunction(MergedFunction.MergeMode.UNION, functions);
        Log.v(TAG, "Random Signal: " + result);
        return result;
    }

    /* Static */

    public static final FunctionProviderI STEP_FUNCTION = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Step Function"),
            new StepFunction(1)
    );

    public static final FunctionProviderI RECT_FUNCTION = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM,"Rect Function"),
            new RectFunction(20, 10)
    );

    public static final FunctionProviderI SQUARE_FUNCTION = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM,"Square Function"),
            new RectFunction(20, 20)
    );

    public static final FunctionProviderI CIRCLE_FUNCTION = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM,"Circle Function"),
            new CircleFunction()
    );

    public static final FunctionProviderI PI_SIM_FUNCTION = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Pi Simulation"),
            new PiSimulationFunction()
    );

    public static final FunctionProviderI SINE_SIGNAL = new SimpleFunctionProvider(new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Sine Signal"), new MergedFunction(MergedFunction.MergeMode.UNION,
            new SineSignal(1, 10, 0, 0, 1),
            new SineSignal(2, 20, 0, 0, 1)
    ));

    public static final FunctionProviderI RANDOM_SIGNAL = new BaseFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Random Signal"),
            Providers::createRandomSignal
    );

    public static final FunctionProviderI PARTICLE_SPREAD = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Spread Particle"),
            new ParticleWave(30, 0.25, 0.15).setCentering(true)
    );

    public static final FunctionProviderI PARTICLE_LOCALISED = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM, "Localised Particle"),
            new ParticleWave(30, 1, 2).setCentering(true).setMultiplier(16)
    );


    /* ................. RC ................ */

    public static final FunctionProviderI RC_CHARS = new SimpleFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PROGRAM,"RC (chars)"),
            new CharMerger(Arrays.asList(new CharR(), new CharC()), 10, true)
    );

    public static final FunctionProviderI RC_CONTINUOUS = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH,"RC (One Line)"),
            "m 114.56632,253.17963 -67.425992,5.54564 16.75325,-85.97094 -6.542969,35.34395 53.773301,-47.47666 -49.320681,10.12625 49.320681,-10.12625 -53.773301,47.47666 53.644271,57.48545 56.5344,-1.21182 -52.96296,-11.19228 7.002,-77.40808 46.60977,-13.98293 -46.60977,13.98293 z"
    );

    public static final FunctionProviderI RC_AQUIRE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH,"RC (Aquire)"),
            "m 112.18345,156.63332 c -5.84213,-4.83313 2.78768,-6.42478 5.71501,-9.94835 16.73067,-14.16886 26.15375,-36.51953 24.34171,-58.42009 -38.87618,0 -77.752351,0 -116.628526,0 0,46.99008 0,93.98015 0,140.97023 6.773344,0 13.546689,0 20.320033,0 0,-21.87226 0," +
                    "-43.74451 0,-65.61677 14.620869,-0.49717 29.535934,1.44514 43.81507,-2.11667 3.33665,-0.3306 4.306734,5.84622 6.620487,8.16853 12.115976,19.85497 24.231946,39.70994 36.347916,59.56491 7.90223,0 15.80447,0 23.7067,0 -14.74613,-24.2006 -29.49227,-48.40119 -44.2384,-72.60179 z " +
                    "M 91.863417,139.27663 c -14.066254,6.23062 -29.713188,3.35854 -44.602511,4.02167 -3.022389,-0.63445 -0.504735,-6.80895 -1.329229,-9.64129 0,-8.35737 0,-16.71473 0,-25.0721 24.623928,0 49.247855,0 73.871783,0 -4.43851,13.57705 -14.68836,25.1757 -27.940043,30.69172 z",
            "m 223.94325,209.12674 c -27.36493,0.74585 -51.51118,-24.43359 -50.14565,-51.64634 0.10912,-26.31491 23.78904,-49.5242 50.14565,-48.89549 19.72245,-0.31084 38.88028,12.19862 46.35507,30.48005 7.19668,0 14.39336,0 21.59004,0 -8.46064,-31.27041 -40.68591,-53.496544 -72.90338,-50.628942 " +
                    "-33.15376,1.65412 -62.37928,29.775222 -65.16966,62.872552 -3.63888,30.91695 15.65776,62.71984 45.01893,73.32609 29.77709,11.89558 66.61336,0.24103 83.97226,-26.75266 1.79003,-4.43709 12.183,-16.66361 5.43394,-17.3303 -6.33349,0 -12.66697,0 -19.00046,0 -7.99066,17.2572 -26.26502,28.81387 -45.29674,28.57504 z"
    );


    /* ............... NS .................. */

    public static final FunctionProviderI NS_PRODUCT_SANS = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "NS (PD Sans)"),
            "m 31.000089,36.531423 h 5.249165 L 48.613953,56.711545 H 48.84725 L 48.613953,51.345732 V 36.531423 h 4.354863 V 64.371437 H 48.380657 L 35.393835,43.180365 h -0.233297 l 0.233297,5.365812 v 15.82526 h -4.393746 z",
            "m 66.772161,64.99356 c -1.114637,0 -2.203353,-0.168492 -3.266147,-0.505475 -1.036872,-0.311061 -2.00894,-0.790615 -2.916203,-1.43866 -0.881341,-0.648045 -1.658995,-1.45162 -2.332962,-2.410727 -0.673967,-0.959107 -1.192403,-2.073744 -1.555308,-3.343913 l 4.199332,-1.710839 c 0.181453,0.725811 0.440671,1.412739 0.777654,2.060784 0.362905,0.622123 0.790615,1.16648 1.283129,1.633073 0.518436,0.466593 1.088716,0.842459 1.710839,1.127598 0.648045,0.259219 " +
                    "1.360895,0.388828 2.138549,0.388828 0.648045,0 1.270168,-0.07777 1.866369,-0.233297 0.596201,-0.181453 1.114637,-0.440671 1.555308,-0.777654 0.440671,-0.336983 0.790615,-0.751732 1.049833,-1.244246 0.28514,-0.492515 0.42771,-1.062794 0.42771,-1.710839 0,-0.57028 -0.103687,-1.088716 -0.311062,-1.555308 -0.207374,-0.466593 -0.531396,-0.894302 -0.972067,-1.283129 -0.440671,-0.388827 -1.023911,-0.751733 -1.749722,-1.088716 -0.72581,-0.362905 " +
                    "-1.59419,-0.725811 -2.605141,-1.088716 L 64.322551,51.190201 C 63.570818,50.930983 62.793164,50.594 61.989589,50.179251 61.211935,49.73858 60.499085,49.220144 59.85104,48.623943 59.228917,48.00182 58.710481,47.276009 58.295732,46.446512 c -0.388827,-0.829498 -0.583241,-1.801566 -0.583241,-2.916203 0,-1.036872 0.207375,-2.00894 0.622124,-2.916203 0.440671,-0.933185 1.049833,-1.749721 1.827487,-2.44961 0.777654,-0.699889 1.697878,-1.244246 " +
                    "2.760671,-1.633073 1.088716,-0.414749 2.281119,-0.622124 3.577209,-0.622124 1.347934,0 2.527376,0.194414 3.538326,0.583241 1.036872,0.362905 1.905252,0.829498 2.605141,1.399777 0.699889,0.57028 1.257207,1.205364 1.671956,1.905252 0.440671,0.673967 0.764693,1.309052 0.972068,1.905253 l -3.966036,1.671956 c -0.129609,-0.388827 -0.324022,-0.777654 -0.58324,-1.166481 -0.233297,-0.414749 -0.544358,-0.777654 -0.933185,-1.088716 -0.388827,-0.311061 " +
                    "-0.85542,-0.570279 -1.399778,-0.777654 -0.518436,-0.207374 -1.127598,-0.311061 -1.827487,-0.311061 -0.622123,0 -1.205363,0.09073 -1.749721,0.272179 -0.544358,0.155531 -1.023911,0.388827 -1.43866,0.699888 -0.388827,0.311062 -0.699889,0.673967 -0.933185,1.088716 -0.233296,0.414749 -0.349944,0.86838 -0.349944,1.360894 0,0.985029 0.401788,1.788605 1.205363,2.410728 0.829498,0.596201 2.034862,1.166481 3.616092,1.710839 l 1.749721,0.622123 " +
                    "c 1.088716,0.362905 2.086705,0.790615 2.993968,1.283129 0.907263,0.492515 1.697878,1.088716 2.371845,1.788605 0.673967,0.673967 1.192403,1.464581 1.555308,2.371844 0.388827,0.907263 0.583241,1.957096 0.583241,3.149499 0,1.451621 -0.298101,2.695868 -0.894302,3.73274 -0.57028,1.01095 -1.309051,1.853408 -2.216314,2.527375 -0.907263,0.673967 -1.918214,1.166481 -3.032851,1.477543 -1.114637,0.311061 -2.203353,0.466592 -3.266147,0.466592 z"
    );

    public static final FunctionProviderI NS_AQUIRE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "NS (Aquire)"),
            "m 106.6169,203.77303 c 3.3145,0 6.62899,0 9.94349,0 0,-12.63652 0,-25.27303 0,-37.90955 -3.3145,-3.3145 -6.62899,-6.62899 -9.94349,-9.94349 0,15.95101 0,31.90203 0,47.85304 z m 44.7457,-68.7758 c 0,14.84618 0,29.69236 0,44.53854 -14.91523,-14.88071 -29.83047,-29.76141 -44.7457,-44.64212 0,4.66101 0,9.32202 0,13.98303 18.1952,18.1952 36.39041,36.39041 54.58561,54.58561 0,-22.82169 0,-45.64337 0,-68.46506 -3.27997,0 -6.55994,0 -9.83991,0 z",
            "m 212.26638,164.41338 c -8.17726,-0.24905 -16.44808,0.52317 -24.56499,-0.43336 -7.02521,-2.10841 -9.03826,-12.68229 -2.9185,-16.99241 5.48378,-3.61751 12.4261,-1.44337 18.57138,-2.0378 5.54266,0.52334 13.42605,-1.98705 16.6533,4.06697 1.29729,2.80583 2.7894,6.15072 6.39244,5.14238 1.88325,0 3.76651,0 5.64977,0 -0.007,-11.28528 -11.23015,-20.62011 -22.31267,-19.14727 -7.84215,0.18908 -15.76204,-0.53439 -23.54925,0.51376 -11.34539,2.508 -18.47483,16.18336 " +
                    "-13.51381,26.83008 3.42857,8.14531 12.52463,13.08471 21.22445,12.01694 7.19249,0.1952 14.48159,-0.53699 21.60936,0.48002 6.60879,2.01145 8.93582,11.69221 3.62548,16.29923 -4.97958,4.50755 -12.21352,2.22191 -18.26579,2.76668 -5.608,-0.66726 -13.175,2.07363 -17.07666,-3.24832 -1.82589,-2.54614 -2.71563,-7.1748 -6.70894,-6.05919 -1.97868,0 -3.95736,0 -5.93604,0 -0.0924,10.91284 10.48034,20.27231 21.28621,19.1478 8.12549,-0.17388 16.31603,0.49274 24.39617,-0.4672 " +
                    "11.14817,-2.27697 18.34966,-15.38794 14.01171,-25.98265 -2.79737,-7.53863 -10.46642,-13.07287 -18.57362,-12.89566 z"
    );

    public static final FunctionProviderI NS_DOGER = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "NS (Doger)"),
            "m 56.019035,142.19589 c 6.283732,0 12.567465,0 18.851197,0 18.160678,12.84367 36.321348,25.68735 54.482028,38.53102 0,-12.84367 0,-25.68735 0,-38.53102 4.90269,0 9.80539,0 14.70808,0 0,18.09162 0,36.18325 0,54.27487 -6.7249,-0.91309 -14.71072,2.11436 -20.46617,-2.11847 -17.6914,-12.65541 -35.382808,-25.31081 -53.074214,-37.96621 -4.83364,0 -9.667281,0 -14.500921,0 0,-4.73006 0,-9.46013 0,-14.19019 z m 0,54.27487 c 0,-11.32453 0,-22.64905 0,-33.97358 " +
                    "4.902692,0 9.805385,0 14.708077,0 0,11.32453 0,22.64905 0,33.97358 -4.902692,0 -9.805385,0 -14.708077,0 z",
            "m 250.3313,176.0659 c -20.69264,-0.19029 -41.40746,0.39364 -62.0857,-0.31586 -6.72788,0.6668 -17.31692,-14.45259 -6.2125,-13.24732 23.49135,0.0945 46.99633,-0.22767 70.47908,0.17326 9.55463,0.84272 14.43258,10.69068 12.53683,19.36973 0.31228,9.11224 -8.74398,14.6862 -17.04882,14.42423 -23.66082,-0.006 -47.33475,0.006 -71.00212,8.6e-4 0,-4.73006 0,-9.46012 0,-14.19018 24.44441,0 48.88882,0 73.33323,0 0,-2.07157 0,-4.14315 0,-6.21472 z m 14.70807,-19.67982 " +
                    "c -29.3471,0 -58.6942,0 -88.0413,0 -0.14714,-10.35199 11.69155,-15.53765 20.66785,-14.19019 22.45782,0 44.91563,0 67.37345,0 0,4.73006 0,9.46013 0,14.19019 z"
    );


    /* ............. DKV ............ */

    public static final FunctionProviderI DKV_AQUIRE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "DKV (Aquire)"),
            "M 68.090704,145.00749 C 66.480726,131.47518 53.25553,121.01899 39.74509,122.22687 c -6.29417,0 -12.588341,0 -18.882511,0 0,2.54 0,5.08 0,7.62 8.004421,0.14336 " +
            "16.044655,-0.30105 24.024444,0.24958 11.418501,1.44098 19.133702,14.69805 14.616143,25.30436 -2.792155,7.6895 -10.994565,12.91613 -19.140657,11.99043 -3.959976,0 -7.919953,0 -11.87993,0 " +
            "0,-11.24479 0,-22.48958 0,-33.73437 -2.54,0 -5.08,0 -7.62,0 0,13.75833 0,27.51667 0,41.275 8.460001,-0.10003 16.9485,0.20289 25.390153,-0.15657 13.852489,-2.00932 24.09646,-15.9331 21.837972,-29.76781 z",
            "m 83.568696,145.56312 c 0,-7.77875 0,-15.5575 0,-23.33625 -2.54,0 -5.08,0 -7.62,0 0,10.31875 0,20.6375 0,30.95625 2.54,-2.54 5.08,-5.08 7.62,-7.62 z m 13.096875,3.01625 " +
                    "c 8.784169,-8.78417 17.568329,-17.56833 26.352499,-26.3525 -3.57187,0 -7.14375,0 -10.71562,0 -12.11953,12.08984 -24.17334,24.24574 -36.353754,36.27437 0,5.47688 0,10.95375 " +
                    "0,16.43063 2.54,0 5.08,0 7.62,0 0,-4.39208 0,-8.78417 0,-13.17625 2.566458,-2.59292 5.132917,-5.18583 7.699375,-7.77875 7.01146,6.985 14.022919,13.97 21.034379,20.955 3.57187,0 " +
                    "7.14375,0 10.71562,0 -8.78417,-8.78417 -17.56833,-17.56833 -26.352499,-26.3525 z",
            "m 140.63929,122.06812 c -3.36021,0 -6.72041,0 -10.08062,0 7.24958,13.09687 14.49917,26.19375 21.74875,39.29062 1.66687,-3.01625 3.33375,-6.0325 5.00062,-9.04875 -5.55625,-10.08062 " +
                    "-11.1125,-20.16125 -16.66875,-30.24187 z m 38.49688,0 c -8.0956,14.60536 -16.21622,29.19687 -24.28875,43.815 1.66687,3.01625 3.33375,6.0325 5.00062,9.04875 9.74289,-17.63245 " +
                    "19.52772,-35.24169 29.28938,-52.86375 -3.33375,0 -6.6675,0 -10.00125,0 z"
    );


    /* ........... Others  ............ */

    public static final FunctionProviderI EIGHTH_NOTE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Eighth Note"),
            "M253.084,7.255c14.601,14.299,22.646,33.409,41.014,44.169 c 14.282,8.366,35.335,8.5,44.169,22.084c5.939,9.133,7.419,27.392,0,35.756c-5.068-35.817-35.035-32.236-57.841-49.428 " +
                    "c -5.958-6.66-11.919-13.321-17.878-19.981c4.557,41.711,9.115,83.435,13.671,125.146c2.243,12.553,8.561,32.938,4.207,46.273 c -4.949,15.16-21.632,26.625-37.859,30.498c-30.948,7.385-66.418-20.607-55.737-51.531" +
                    "c11.528-33.374,57.613-34.349,83.08-14.723 C 264.303,119.437,258.693,63.337,253.084,7.255z"
    );

    public static final FunctionProviderI TREBLE_CLEF = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Treble Clef"),
    "M 51.688,5.25 C 44.547587,7.2709829 42.752854,15.397359 40.869726,21.595636 38.982039,30.834543 41.447267,40.141606 42.906,49.25 34.108088,58.50372 23.480548,67.729961 21.148778,80.956504 c -2.048685,13.006751 " +
            "4.779029,28.222686 17.946078,32.314966 4.866906,3.33948 13.716403,-1.72244 16.641421,2.4086 1.125095,7.84217 4.006805,16.11122 1.373048,23.91484 -2.868007,5.71961 -11.462642,8.58611 -16.493864,3.96825 -0.902355," +
            "-4.96892 9.53925,-5.42143 5.403732,-11.67442 -1.998765,-6.01347 -12.265833,-5.86804 -13.599447,0.50958 -2.98276,6.7666 3.335319,13.70933 9.860651,14.8617 6.80251,2.18261 15.980353,-0.81063 17.571245,-8.45859 2.202277," +
            "-8.10503 -1.050045,-16.31557 -2.143852,-24.25654 2.85667,-4.9573 10.290242,-6.26184 11.518192,-12.81784 C 73.268887,91.935514 68.948253,78.698375 58.513381,75.138459 53.891516,75.304881 47.60321,75.308545 48.195605," +
            "69.076071 45.300349,62.613251 48.92385,56.250104 53.566812,51.981779 61.340363,39.390222 62.0357,22.941859 56.419282,9.3964764 55.473838,7.4829681 53.90198,5.6207176 51.688,5.25 Z m 1.281,11.719 c 7.076539,2.471362 " +
            "4.425838,11.796662 1.997544,16.885032 C 52.350675,39.12513 48.324358,43.487499 44.344,47.75 42.268156,37.667919 42.440311,25.291188 50.623363,17.879301 51.325154,17.410799 52.123981,17.063292 52.969,16.969 Z M 45.25," +
            "61.656 c 0.218244,5.490995 5.828742,13.784623 -1.966625,16.477025 -7.125651,4.782636 -10.002295,16.280999 -3.240171,22.598905 1.750699,2.16512 8.829261,6.12311 3.942277,1.54463 -3.874005,-4.958126 -3.864756,-12.995897 " +
            "1.418656,-16.988056 6.106089,-4.187332 5.35819,5.268137 6.295084,8.882397 C 52.827296,99.878522 53.93748,105.58977 55,111.31 42.848715,115.98597 26.959923,107.31605 26.163833,93.85488 24.722539,83.583652 30.491072,73.641845 " +
            "38.532331,67.628107 40.771979,65.637949 43.065054,63.707109 45.25,61.656 Z m 6.094,21.469 c 9.438159,-0.813941 15.809813,10.447145 12.953949,18.75772 -0.151321,4.9237 -8.805972,11.63335 -8.419708,3.05093 C 54.396934,97.657876 " +
            "52.865542,90.392433 51.344,83.125 Z"
    );

    public static final FunctionProviderI HILBERT_CURVE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Hilbert Curve"),
            "m 528.5,1234 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -64,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-96 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-32 64,0 0,32 " +
                    "-32,0 0,64 32,0 0,-32 32,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -96,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 " +
                    "0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,32 -32,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-32 -32,0 0,-32 64,0 0,32 32,0 0,-64 -32,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 " +
                    "0,32 -96,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,64 32,0 0,32 -32,0 0,64 32,0 0,-32 32,0 0,32 32,0 0,-64 -32,0 0,-32 64,0 0,32 32,0 0,-32 64,0 0,32 " +
                    "-32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,96 32,0 0,-32 64,0 0,32 -32,0 0,32 32,0 0,32 -64,0 0,-32 -32,0 0,32 -64,0 0,-32 32,0 0,-64 -32,0 0,32 -32,0 0,-32 -32,0 0,64 32,0 0,32 -32,0"
    );

    public static final FunctionProviderI SETTINGS = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Settings"),
            "M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z"
    );

    public static final FunctionProviderI ANDROID = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Android"),
            "M17.6,11.48 L19.44,8.3a0.63,0.63 0,0 0,-1.09 -0.63l-1.88,3.24a11.43,11.43 0,0 0,-8.94 0L5.65,7.67a0.63,0.63 0,0 0,-1.09 0.63L6.4,11.48A10.81,10.81 0,0 0,1 20L23,20A10.81,10.81 0,0 0,17.6 11.48ZM7,17.25A1.25,1.25 0,1 1,8.25 16,1.25 1.25,0 0,1 7,17.25ZM17,17.25A1.25,1.25 0,1 1,18.25 16,1.25 1.25,0 0,1 17,17.25Z"
    );

    public static final FunctionProviderI EMOJI_STARS = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Emoji Stars"),
            "m 653.1993,253.64676 c -73.27865,0.38114 -147.92761,10.54836 -214.9677,41.52785 -37.55368,-30.96046 -48.67961,-82.10444 15.49329,-81.1863 138.02876,-44.33444 291.12268,-41.42678 426.83934,9.94773 58.32037,3.98664 -12.59618,93.25578 -43.96128,58.46933 C 777.99058,261.20428 715.22735,254.09428 653.1993,253.64676 Z M 196.88151,709.9646 c -4.10208,157.02438 67.14183,326.8528 212.91999,400.0066 143.19081,74.2602 320.39449,74.0111 467.38423,10.7226 127.40807,-59.6054 213.81767,-190.505 227.05687,-329.5853 10.5945,-78.64194 6.0672,-159.60036 -15.7337,-236.0184 27.8795,-22.93672 84.1743,-46.9417 76.2469,14.13415 40.9998,187.01233 2.8564,404.09602 -142.9119,537.57045 -146.82875,132.4141 -365.61753,156.9544 -550.83697,104.7847 -143.7343,-42.103 -266.22264,-154.3561 -311.86236,-298.20123 -43.95887,-126.19161 -42.64139,-266.05146 -4.27946,-393.46461 55.40807,16.72557 70.92372,58.78154 47.2033,109.57614 -3.5364,26.66884 -5.14515,53.578 -5.1869,80.4749 z m 86.96421,18.0768 C 243.9035,680.78483 309.22888,603.76179 266.7634,549.75584 245.36528,510.41379 141.65873,508.56329 171.33751,448.51905 c 43.33253,-28.71396 110.23295,-28.14348 135.38593,-79.73346 7.08967,-38.68625 14.5979,-153.581 73.76066,-94.27195 27.32727,55.4876 79.17103,99.92796 144.66412,77.80513 37.66473,-10.10907 121.56924,-19.84625 75.64916,40.0944 -42.51447,39.58375 -82.92326,98.27107 -44.78315,155.54165 11.15397,29.41096 69.57076,121.04919 -0.41962,100.42796 -48.24041,-4.02839 -100.38779,-35.06877 -146.75045,-10.82554 -44.7134,25.47873 -79.6518,66.65363 -124.99844,90.48416 z m 685.45383,17.09971 c -2.16848,128.80182 -77.527,268.94949 -209.80223,301.51869 -128.38379,37.5125 -290.99823,7.8498 -365.43998,-112.60319 -36.22141,-56.03301 -54.27184,-122.57674 -56.95827,-188.9155 210.73349,0 421.46699,0 632.20048,0 z m 53.25335,-17.09971 c -54.64769,-27.4412 -92.25725,-84.30922 -152.36481,-100.88874 -50.58898,3.06425 -100.10709,19.92865 -150.54426,27.11572 -11.95253,-63.24897 56.13759,-112.9445 44.9192,-176.15459 -3.46885,-51.29703 -97.14771,-86.09389 -62.89457,-132.88953 55.0892,-8.6388 116.9214,30.56087 169.77729,-2.42349 27.70691,-27.29267 82.42901,-133.70747 112.99921,-55.93172 -0.29933,62.18876 27.19444,128.85989 96.40974,137.67853 45.9119,1.4655 89.8532,56.96077 30.6826,79.2133 -64.0695,14.44543 -104.2841,77.21796 -81.7661,140.8336 -1.8801,23.14242 23.8257,74.15575 -7.2183,83.44692 z"
    );

    public static final FunctionProviderI INDIA_MAP_OUTLINE = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "India"),
            "m 414.59789,1418.856 c -22.46911,-14.5943 -50.14453,-32.1004 -49.80147,-62.536 -12.76242,-34.7993 -13.85409,-74.3426 -30.34858,-107.1232 -32.5364,-20.2811 -35.17102,-63.7599 -48.9787,-96.3968 -8.15452,-38.5886 -27.59361,-72.4006 -49.13436,-104.9574 -12.34292,-56.21098 -25.93304,-112.14293 -38.72363,-168.1626 6.53695,-18.87326 17.754,-37.14756 10.04661,-57.92 -5.44331,-17.93505 -8.1542,-39.30866 -16.13781,-55.00653 -19.39686,-3.47616 -3.90331,28.6006 -9.59923,39.46651 -18.75581,16.14788 -45.57902,28.99047 -70.91813,30.2726 C 83.385933,813.48762 53.844217,788.7054 31.203466,760.96682 35.7239,738.73969 45.965323,764.34998 58.079712,757.04397 75.58614,752.66572 96.575145,750.51139 98.145708,728.38211 85.059553,725.21521 60.370559,749.75046 45.20368,734.13498 30.625395,721.93593 7.5302703,712.8719 1.5653143,694.88 13.528936,674.07316 35.164046,662.34424 59.36,666.55189 c 23.40287,-2.2742 50.19146,4.62557 65.53507,-18.51645 -6.33071,-19.01179 -12.91159,-38.04784 -14.17034,-58.23472 -14.974547,-19.73029 -38.650662,-33.5076 -50.244936,-55.0821 11.296438,-18.81012 22.497953,-40.01318 34.135862,-57.31131 15.545834,7.05794 29.867664,22.14238 47.037544,10.13767 15.11854,-3.56338 30.30602,-6.95384 35.7272,-22.82316 19.56236,-30.84588 55.83904,-48.42843 66.37886,-84.95724 9.40003,-28.62245 36.73823,-47.27809 47.84099,-73.79925 -7.27572,-20.31883 6.73976,-29.32599 22.03526,-38.88489 24.19337,-12.79187 -0.979,-17.49835 -13.31573,-23.94108 -20.68362,-10.67457 -50.97539,-15.8074 -51.68125,-44.43294 -5.86033,-19.7894 -15.70775,-42.21277 -11.15302,-62.19106 7.55214,-11.38031 35.44296,-24.91589 11.53694,-35.43486 C 232.03969,87.703403 211.54099,74.89133 196.03801,61.965848 199.84546,44.237639 207.94753,26.733192 228.96087,26.809096 257.47609,20.856519 284.85502,5.6810901 312.9478,1.5619928 335.27809,23.481228 364.70422,33.570642 391.213,48.918843 c 10.3057,11.899185 16.76771,44.449592 37.69744,29.335299 24.37144,-11.165258 49.14061,-27.976606 76.69043,-16.958698 12.85454,6.375082 41.06644,0.941316 36.85645,22.704666 -0.55737,20.99562 -3.46333,42.30186 -23.17647,53.85494 -16.90566,15.28218 -44.89133,40.1064 -24.31768,63.26506 10.38275,14.20263 12.27487,28.81398 2.21714,43.71489 -11.37013,12.05783 -36.26152,-13.69433 -41.16142,9.33419 0.88738,16.78873 12.73453,34.45621 14.77401,52.55092 24.48872,25.1295 68.76652,20.36246 91.76797,48.81363 16.31403,10.27726 -11.17435,24.89777 -14.20659,36.98211 -6.17459,13.59523 -26.74722,34.02703 -12.51341,46.79485 44.78911,17.0487 86.19067,41.3863 127.36,65.74695 28.48152,9.8434 65.62348,-12.68997 85.72223,18.69763 26.75471,26.21092 68.63217,24.5451 102.75777,33.37077 13.99117,-7.37445 52.80106,-3.82041 38.90651,-28.29027 -3.2559,-16.97159 -9.28106,-35.16034 7.59199,-47.07561 3.3942,-17.28528 26.24108,-10.36838 26.12321,2.89497 1.23905,17.80338 -14.31544,45.00013 12.81963,47.73364 19.63705,6.51879 38.26017,14.12956 59.23593,8.40938 20.92886,-5.98773 46.17506,-2.30619 65.36316,-8.79799 10.5933,-17.71869 -2.0438,-25.11395 -18.4362,-30.30403 2.331,-10.72916 7.1141,-23.21356 21.563,-16.573 32.8299,5.3574 37.5694,-47.16268 70.9941,-43.23988 24.4267,2.81829 31.7772,-38.44098 58.24,-25.93522 18.7028,9.43183 33.3957,-4.99817 49.674,-10.82756 9.8153,8.02418 26.5947,20.00251 25.8036,33.44 -11.4212,25.92294 27.9141,20.65401 35.701,34.80135 -6.464,13.6217 -9.0557,29.84796 -13.6955,43.13161 -29.0591,7.97802 -61.2181,16.60121 -84.2861,35.83517 -6.5164,24.84024 -38.6098,45.05347 -23.4561,72.19805 -3.703,17.15364 -14.1419,36.06417 -23.6478,50.8416 -16.0774,4.24764 -35.343,8.30547 -34.3044,28.95222 -7.3422,19.25498 -13.032,40.76925 -16.5887,60.09636 -20.1322,17.85049 -23.7443,-6.40681 -25.0929,-22.82182 -3.2408,-17.74412 5.3053,-48.51075 -18.7965,-52.63454 -8.1948,12.1669 -4.344,42.30881 -26.0749,34.07998 -0.9293,-14.70943 -10.4053,-32.78651 -6.5923,-45.87616 16.7937,-12.52287 43.1866,-17.78549 42.8058,-43.87305 11.2272,-21.02535 -21.7275,-12.22238 -33.1219,-12.78186 -25.1177,-3.5765 -56.3548,8.7185 -77.09216,-9.51599 -2.31427,-12.89652 10.05454,-41.80857 -12.51493,-37.58115 -16.00647,0.61844 -29.99647,-15.62538 -43.39703,-16.85613 -13.43286,15.35442 -19.83063,31.79049 2.60214,41.11801 14.01617,3.94157 28.9723,21.67646 8.15777,27.65549 -10.61792,7.68829 -39.18646,14.38467 -22.76224,30.83008 16.68432,-0.59491 30.48613,10.2019 21.28368,27.27799 -11.3215,31.28105 11.8721,61.19461 11.08552,93.04285 7.94602,20.31169 -22.75026,6.16217 -32.65184,10.41872 -23.37859,-0.77372 -48.15486,7.18299 -64.79971,22.4599 3.19422,13.94662 14.54235,28.20739 -1.40551,38.80506 -16.98939,36.94291 -69.8176,29.18195 -89.80464,64.31632 -16.00357,27.11945 -37.02594,50.12314 -65.43014,64.37856 -18.8539,14.4343 -50.4349,21.51086 -50.10896,50.0465 -14.45039,14.763 -41.44859,17.9507 -48.98442,40.9031 -12.24394,9.9354 -38.65313,-6.9054 -40.54404,17.8619 -13.96722,19.4822 -0.12407,44.6877 -0.20166,66.6792 4.43651,24.1061 13.37122,49.8199 -4.22634,71.1717 -14.78319,19.0068 -19.2025,41.7593 -12.83463,64.955 -0.53009,12.7155 12.44509,37.7478 -10.93427,34.7514 -23.53758,8.7706 -17.61758,46.4932 -45.92569,50.9701 -22.44672,1.0208 -12.8955,27.6916 -30.67629,34.7156 -4.97998,3.6502 -9.47268,11.5338 -16.64622,9.9424 z"
    );

    public static final FunctionProviderI FOURIER_PORTRAIT = new PathFunctionProvider(
            new FunctionMeta(FunctionType.INTERNAL_PATH, "Joseph Fourier"),
            "M978.141,416.063c7.732-7.25,21.793,1.315,26.098,1.45" +
                    "c14.066,0.442,28.632-1.293,34.314-0.725c9.666,0.966,32.381,0.725,39.147-3.142c0,0-2.9-0.967-6.767-1.45" +
                    "c-3.866-0.483-6.766-2.9-12.565-2.9c-3.057,0-12.083,3.383-14.016,3.383c-1.934,0-8.216-3.866-15.949-2.9" +
                    "c-7.732,0.967-13.049,5.286-16.915,5.286l-5.8,2.93c6.766,5.8,18.365,12.566,31.897,11.599c13.532-0.966,13.049,0,27.064-8.216" +
                    "c14.017-8.216,18.366-12.566,16.433,1.45c-1.933,14.016,8.699-11.116,8.699-11.116s2.741-9.988,0-22.715" +
                    "c-1.931-8.964-15.466-16.432-19.332-20.298c0,0-11.437-31.415-13.532-42.531c-1.291-6.849,12.083,2.417,19.332,6.766" +
                    "c7.25,4.35,26.099-7.249,30.448-10.149s-3.384-9.666-9.253-9.753c-3.54,2.867-7.693,5.403-15.396,5.403" +
                    "c-10.633,0-28.031-5.8-28.031-5.8c0.483-9.504-5.958-26.259,4.995-35.281c16.264-13.397,25.36-15.109,37.535-10.149" +
                    "c4.35,1.771,22.393,25.615,22.393,25.615s-9.668,12.888-12.889,11.599c-3.221-1.288-16.109-14.821-21.909-14.821" +
                    "s-23.198,2.577-25.132,6.443c-1.934,3.867-5.154,15.466-2.577,12.244s7.733-6.444,7.733-6.444c0.819,2.97,3.605,6.928,7.249,6.928" +
                    "c4.271,0,7.733-3.029,7.733-6.766c0-1.413-0.497-2.722-1.343-3.806c0.463-0.04,0.91-0.061,1.343-0.061" +
                    "c6.766,0,22.231,11.599,22.231,11.599s26.581,8.7,26.581,18.366c0,9.666,0.643,23.356,0.643,23.356s30.931,2.577,33.508-15.466" +
                    "s-12.887-43.82-5.154-43.82c7.733,0,22.557-21.261,22.557-21.261s-7.732,6.444-25.135,8.374" +
                    "c7.732-2.578,18.044-25.776,18.044-36.086c0-10.31,5.154-15.466-18.044-25.776c15.465-7.733,15.465-38.664-2.577-61.862" +
                    "c-18.043-23.199-25.775-7.733-25.775-7.733s9.024-25.127-7.085-41.237c-15.678-15.679-31.579-10.314-31.579-10.314" +
                    "s3.227-19.972-17.396-27.705c-20.621-7.733-39.953,18.043-35.443,7.732c5.166-11.808-14.176-36.086-14.176-36.086" +
                    "s2.577,18.043-10.31,28.998c-18.526,15.749-33.514-14.182-56.712-16.76c-23.198-2.578-30.931,12.889-30.931,12.889" +
                    "s-5.434-9.285-25.126-1.285c-20.622,8.377-19.978,23.198-19.978,23.198s-14.174-1.932-32.219,10.956" +
                    "c-18.045,12.888-15.472,36.726-15.472,36.726s-13.022,5.827-23.198,23.198c-10.95,18.692-5.154,48.974-5.154,48.974" +
                    "s-12.889,10.311-15.466,25.776c-2.577,15.466,15.466,33.509,15.466,33.509s-12.889,5.155-15.466,12.888" +
                    "c-2.577,7.733,0,28.354,20.62,43.819c-7.732,12.888,0,28.354,5.156,38.664c5.156,10.31,25.775,15.466,25.775,15.466" +
                    "s12.889,20.621,2.579,23.198c-10.31,2.577-23.199,7.734-23.199,25.777s-15.465,69.595-20.621,90.216" +
                    "c-20.622,5.155-28.353,28.354-28.353,28.354s2.577,10.31-12.889,15.465c-15.465,5.156-56.707,43.818-64.439,54.13" +
                    "c-7.732,10.312-43.82,33.509-56.708,51.551c-12.889,18.045-53.11,87.379-54.13,136.613c-1.125,54.294-4.029,128.715-2.577,134.035" +
                    "c1.452,5.319,25.777,7.736,43.822,12.892c18.044,5.156,76.041,29.643,101.816,34.798c25.775,5.156,68.306,25.777,81.194,24.488" +
                    "c12.889-1.29,11.6-41.243,11.6-48.976c0-7.733-6.443-37.377-7.733-50.264s-2.577-36.087,0-50.263" +
                    "c2.577-14.177,10.312-37.373,9.022-47.685c-1.289-10.312-16.576-35.107-14.178-33.51c34.797,23.198,14.178,94.083,14.178,108.259" +
                    "c0,14.177,6.443,68.308,1.288,106.972s5.156,27.064,27.065,34.798c21.909,7.732,70.885,5.153,118.57,9.021" +
                    "c47.687,3.866,112.124,2.739,131.456-6.283c0-11.6,2.901-29.803,1.934-42.53c-0.969-12.729-3.221-58.155-3.221-60.733" +
                    "c0-2.579-12.887-1.29-12.887-1.29s-4.648,12.185-9.022,15.466c-7.732,5.8-28.354,5.154-31.577,0s-9.664-23.196,0.646-32.219" +
                    "c10.311-9.022,23.056-9.347,28.353-1.934c6.445,9.021,21.266,8.377,21.266,8.377s-4.511-27.712-7.087-37.376" +
                    "c-2.577-9.664-16.754-43.816-18.043-48.973c-1.289-5.155-6.445-29.644-9.022-33.51s-12.889-2.579-16.755-1.289" +
                    "c-3.866,1.289-1.752,9.707-10.31,16.755c-10.956,9.022-28.062-0.977-30.288-5.8c-3.866-8.376,0-28.998,14.177-30.287" +
                    "c14.176-1.29,17.398-0.644,19.978,7.089s14.176-1.936,14.176-4.512c0-2.577-15.465-37.377-21.908-50.264" +
                    "s-19.332-45.109-27.065-54.13c-7.732-9.021-15.466-2.577-15.466-2.577s1.934,16.756-5.799,26.422" +
                    "c-3.601,4.498-25.929,11.886-30.288-0.646c-5.156-14.819-6.443-25.775,7.733-30.931c14.176-5.154,18.688,3.866,25.131-3.866" +
                    "c5.219-6.261,9.666-9.666,3.223-21.909c-1.2-2.282,0.002-9.022-10.31-11.6s-19.332-18.042-22.554-33.508" +
                    "c-2.904-13.937-21.263-60.574-27.708-70.885s-3.867-28.353-7.733-30.931c-3.867-2.578-28.356-18.043-45.109-25.776" +
                    "c-16.753-7.733-28.353-19.331-33.508-32.22s-6.443-18.044,0-24.488c0,0,25.773,22.554,28.351,28.998s48.976,38.664,52.842,43.819" +
                    "c3.867,5.155,11.6,23.199,11.602,26.421c0,0,25.775,29.643,32.219,37.375c6.443,7.733,11.76,34.638,19.492,51.391" +
                    "s21.75,25.938,34.637,22.071s56.547-6.285,66.856-11.438c10.31-5.154,4.833-25.132,2.899-53.163" +
                    "c-1.795-26.034,11.439-43.658,15.306-55.257l10.312-11.599c13.047,4.027,26.58,9.826,27.064,47.685" +
                    "c0.149,11.599,18.043,61.863,19.332,72.173c1.29,10.311,1.29,27.063,3.867,29.643c2.576,2.578,32.219,28.354,37.374,28.354" +
                    "c1.29,20.622,2.577,42.528,3.866,60.573s7.894,68.146,2.737,79.744c-5.155,11.6-19.49,24.648-23.356,37.537" +
                    "c-3.867,12.889-21.909,50.264-27.064,57.996c-5.156,7.733-17.883,9.506-18.045,15.466s10.312,10.31,10.312,27.064" +
                    "s1.288,42.53,1.288,50.264c0,7.732,2.254,24.648,2.254,31.092c0,0,67.986-7.57,89.894-19.332s64.763-57.996,64.763-57.996" +
                    "c12.889-9.021,40.275-25.937,38.986-37.535c-2.122-19.093-6.334-101.612-7.089-108.422c-1.288-11.599-18.687-68.146-27.709-72.012" +
                    "s-56.706-100.526-61.86-105.681c-5.154-5.155-48.976-24.487-55.419-27.064c-6.443-2.579-27.064-92.794-27.064-95.372" +
                    "c0,0-47.041-31.575-48.33-36.086c-1.29-4.511,13.853-98.754,11.599-100.526c-5.477,40.759-21.91,112.771-58.646,131.454" +
                    "c-18.042,7.733-51.547,14.825-95.366-13.528c-43.82-28.354-67.017-36.731-82.482-47.042c-15.465-10.311-16.111-26.42-16.111-34.153" +
                    "c-14.178-1.289-16.749-6.44-21.265-16.11c-6.983-14.954-16.753-18.688-21.909-34.153c-5.156-15.466-5.16-38.024,10.306-30.292" +
                    "c15.466,7.733,20.625,12.893,28.358,30.936c7.732,18.043,9.658-1.289,9.666-19.332c0.003-8.374,1.289-10.956,5.799-14.822" +
                    "s43.495-10.149,43.495-10.149c10.149-13.532,27.548-25.131,43.014-25.131c15.465,0,26.581,11.116,28.031,15.465" +
                    "c1.449,4.35-4.673,13.694-8.699,15.466c-3.957,1.741-9.666,5.799-23.199,6.766c-13.532,0.967-23.198-1.933-30.931-1.933" +
                    "c6.285-8.86,12.226-11.388,18.094-14.975l0.271,0.476c0,4.271,3.895,7.733,8.699,7.733s8.7-3.462,8.7-7.733" +
                    "c0-1.068-0.244-2.084-0.684-3.009l1.584-0.213c6.027,0.915,11.665,3.223,16.498,6.123c4.833,2.899,12.405,2.738,14.338-3.062" +
                    "c1.934-5.799-1.772-12.87-1.772-24.487c0-7.25,3.384-11.277,2.417-14.177c-0.967-2.899-19.336-3.552-32.864-3.222" +
                    "c-19.815,0.483-37.214,8.216-47.847,14.016l-35.281,27.548c0-10.311,11.597-33.834-1.292-38.99s-18.042-28.354-15.465-36.087" +
                    "c15.465,7.733,39.957,14.825,46.4,9.67c6.443-5.155-28.354-5.8-30.931-26.42c-2.577-20.62,18.635,12.244,34.154,12.244" +
                    "c17.399,0-23.198-17.399-13.532-27.709c6.417-6.845,22.229-25.132,22.229-25.132s-1.608,35.441,28.034,30.287" +
                    "c29.641-5.155,47.686-21.91,51.552-27.065c18.045-1.289,15.468,3.867,29.644,11.599c14.177,7.733,24.488,36.086,18.045,46.397" +
                    "l10.313-24.487c5.155-11.599,7.742,27.065,21.918,33.509c14.177,6.443,27.08,3.866,27.08,3.866" +
                    "c1.288,7.088,3.894,36.087,4.539,42.53c-10.954-15.465-11.579-20.943-20.399-26.259c-8.82-5.316-32.019-5.8-40.476-1.934" +
                    "c-8.458,3.867-16.19,19.332-16.19,27.065c0,0-1.934,6.283,0,10.633c1.933,4.35,9.609,34.934,11.277,39.47" +
                    "c3.144,8.539,10.471,24.325,11.438,30.125c0.967,5.799,4.028,16.271-3.867,19.332c-9.707,3.762-8.699,1.933-4.832-4.833" +
                    "c3.866-6.767-2.37-7.766-5.316-1.45c-3.384,7.25-11.116,11.599-15.949,7.733s0.967-10.149,0-12.083s-14.499-2.9-15.466,3.866" +
                    "c-0.967,6.767-10.251,5.259-13.532-0.966c-4.671-8.861,6.285-16.271,6.285-21.104c-7.733,5.8-18.332,11.868-27.709,21.909" +
                    "c-13.691,14.66-20.815,42.976-19.979,45.108C968.151,426.212,970.407,423.312,978.141,416.063z"
    );





    /* ........................ Collection ................................... */


    /**
     * A fallback function to load in case of error
     * <p>
     * Must always be asserted without errors
     * */
    public static final FunctionProviderI FALLBACK_PROVIDER = RC_CHARS;

    @NotNull
    @Unmodifiable
    public static final List<FunctionProviderI> INTERNAL_PROGRAMS = List.of(
            NoopProvider.getSingleton(),
            STEP_FUNCTION,
            RECT_FUNCTION,
            CIRCLE_FUNCTION,
            PI_SIM_FUNCTION,
            SINE_SIGNAL,
            RANDOM_SIGNAL,
            PARTICLE_SPREAD,
            PARTICLE_LOCALISED,
            RC_CHARS
    );

    @NotNull
    @Unmodifiable
    public static final List<FunctionProviderI> INTERNAL_PATH = List.of(
            RC_AQUIRE,
            RC_CONTINUOUS,
            NS_PRODUCT_SANS,
            NS_AQUIRE,
            NS_DOGER,
            DKV_AQUIRE,
            EIGHTH_NOTE,
            TREBLE_CLEF,
            SETTINGS,
            ANDROID,
            EMOJI_STARS,
            HILBERT_CURVE,
            INDIA_MAP_OUTLINE,
            FOURIER_PORTRAIT
    );

    @NotNull
    @Unmodifiable
    public static final List<FunctionProviderI> ALL_INTERNAL_FUNCTIONS;

    static {
        final List<FunctionProviderI> allInternals = new ArrayList<>();
        CollectionUtil.addAll(INTERNAL_PROGRAMS, allInternals);
        CollectionUtil.addAll(INTERNAL_PATH, allInternals);

        ALL_INTERNAL_FUNCTIONS = allInternals;
    }




//    @NotNull
//    public static List<FunctionProviderI> loadInitialProviders(boolean loadExternalPathFunctions, @Nullable CancellationProvider c) {
//        final List<FunctionProviderI> all = new ArrayList<>();
//        CollectionUtil.addAll(INTERNAL_PROGRAMS, all);
//        CollectionUtil.addAll(INTERNAL_PATH, all);
//
//        if (loadExternalPathFunctions) {
//            final R.LoadResult result = R.loadExternalPathFunctions(R.DIR_EXTERNAL_PATH_FUNCTIONS, R.DEFAULT_VALIDATE_EXTERNAL_FILES, c);
//            if (result != null) {
//                CollectionUtil.addAll(result.getFunctionProviders(), all);
//            }
//        }
//
//        return all;
//    }
//
//    @NotNull
//    public static Canceller loadInitialProvidersAsync(boolean loadExternalPathFunctions, @NotNull Consumer<List<FunctionProviderI>> callback) {
//        final Async.CExecutor exe = new Async.CExecutor();
//        exe.execute(c -> loadInitialProviders(loadExternalPathFunctions, c), callback);
//        return exe;
//    }
//
//    @NotNull
//    public static Canceller loadInitialProvidersAsync(@NotNull Consumer<List<FunctionProviderI>> callback) {
//        return loadInitialProvidersAsync(R.DEFAULT_LOAD_EXTERNAL_PATH_FUNCTIONS_ON_START, callback);
//    }


}